commit 7a779c068c703bc93cb4cb40e402f58a60d84967
Author: Cody Cutrer <cody@mozy.com>
Date:   Wed Apr 15 13:46:32 2009 -0600

    Fix a race condition where Fiber.state would report HOLD, even if it was still executing on another thread.

diff --git a/lib/common/tango/core/Thread.d b/lib/common/tango/core/Thread.d
index 0891c97..d0e1433 100644
--- a/lib/common/tango/core/Thread.d
+++ b/lib/common/tango/core/Thread.d
@@ -2476,7 +2476,6 @@ private
         assert( Thread.getThis().m_curr is obj.m_ctxt );
         volatile Thread.getThis().m_lock = false;
         obj.m_ctxt.tstack = obj.m_ctxt.bstack;
-        obj.m_state = Fiber.State.EXEC;
 
         try
         {
@@ -2966,9 +2965,7 @@ class Fiber
         static if( is( ucontext_t ) )
           cur.m_ucur = &cur.m_utxt;
 
-        cur.m_state = State.HOLD;
         cur.switchOut();
-        cur.m_state = State.EXEC;
     }
 
 
@@ -2997,9 +2994,7 @@ class Fiber
           cur.m_ucur = &cur.m_utxt;
 
         cur.m_unhandled = obj;
-        cur.m_state = State.HOLD;
         cur.switchOut();
-        cur.m_state = State.EXEC;
     }
 
 
@@ -3466,6 +3461,7 @@ private:
         //       successive pop operations will succeed.
         *oldp = getStackTop();
         volatile tobj.m_lock = true;
+        m_state = State.EXEC;
         tobj.pushContext( m_ctxt );
 
         fiber_switchContext( oldp, newp );
@@ -3473,6 +3469,7 @@ private:
         // NOTE: As above, these operations must be performed in a strict order
         //       to prevent Bad Things from happening.
         tobj.popContext();
+        if (m_state != State.TERM) m_state = State.HOLD;
         volatile tobj.m_lock = false;
         tobj.m_curr.tstack = tobj.m_curr.bstack;
     }
